#!/usr/bin/env zsh
# -*- coding: utf-8 -*-
# shellcheck shell=bash
# shellcheck source=/dev/null
# shellcheck disable=SC1090,SC2128,SC2178

#? ####################### debug
    set +x
    # SET_DEBUG: set to 1 for verbose testing;
    #   set option -r for readonly (override future changes)
    declare -ix SET_DEBUG
    SET_DEBUG=${SET_DEBUG:-0}

    # get name of shell program without path info
    # e.g. instead of /bin/zsh, get zsh
    declare -x SHELL_BIN && SHELL_BIN="${SHELL##*/}"
    # store current shell level
    declare -x SHELL_LVL && SHELL_LVL=$SHLVL

    # provide a BASH_SOURCE variable in zsh
    # to ease the transition to zsh from bash
    [[ "$SHELL_BIN" = 'zsh' ]] && BASH_SOURCE=${(%):-%N}
    BASH_SOURCE="${BASH_SOURCE:-$0}"

    # local script path and name
    SCRIPT_PATH=${BASH_SOURCE%/*}
    SCRIPT_NAME=${BASH_SOURCE##*/}

    declare -ix SSM_LOADED

#? ######################## main loop
    _main_loop() {
        # db_echo(){ [[ SET_DEBUG == 1 ]] && warn "$@"; }
        . $SCRIPT_PATH/ssm_constants
        . $SCRIPT_PATH/ssm_debug
        . $SCRIPT_PATH/ssm_usage
        }

#! ######################## entry point
    if (( SSM_LOADED == 1 )); then
        [[ $SET_DEBUG == 1 ]] && db_echo "SSM already loaded ... standard script modules for macOS."
    else
        # echo "if SSM_LOADED: $SSM_LOADED"
        _main_loop "$@"
        SSM_LOADED=1
    fi
